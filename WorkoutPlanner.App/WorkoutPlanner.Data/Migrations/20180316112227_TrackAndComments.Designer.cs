// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WorkoutPlanner.Data;

namespace WorkoutPlanner.Data.Migrations
{
    [DbContext(typeof(WorkoutPlannerContext))]
    [Migration("20180316112227_TrackAndComments")]
    partial class TrackAndComments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<string>("Text");

                    b.Property<int?>("TrackId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TrackId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int?>("TrackId");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatorId");

                    b.Property<int>("Meters");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Minutes");

                    b.Property<int>("TrackId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Comment", b =>
                {
                    b.HasOne("WorkoutPlanner.Domain.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("WorkoutPlanner.Domain.Models.Track")
                        .WithMany("Comments")
                        .HasForeignKey("TrackId");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Location", b =>
                {
                    b.HasOne("WorkoutPlanner.Domain.Models.Track")
                        .WithMany("Locations")
                        .HasForeignKey("TrackId");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Track", b =>
                {
                    b.HasOne("WorkoutPlanner.Domain.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("WorkoutPlanner.Domain.Models.Workout", b =>
                {
                    b.HasOne("WorkoutPlanner.Domain.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkoutPlanner.Domain.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
